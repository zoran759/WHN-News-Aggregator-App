image: docker:latest
services:
    - docker:dind

variables:
  TEST: "HELLO WORLD"

stages:
    - build
    - test
    - production

before_script:
    - echo "**** install Python ****"
    - apk add --no-cache python3 python3-dev gcc g++ make libffi-dev openssl-dev
    - if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi
    - echo "**** install pip ****"
    - python3 -m ensurepip
    - rm -r /usr/lib/python*/ensurepip
    - pip3 install --no-cache --upgrade pip setuptools wheel docker-compose
    - if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi
    # log in Gitlab Docker registry
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build:
    stage: build
    script:
        - docker-compose -f docker-compose.prod.yml build
        - docker-compose -f docker-compose.prod.yml push

test:
    stage: test
    script:
      - echo $TEST
#      - docker-compose -f docker-compose.prod.yml pull test
#     - docker-compose -f docker-compose.prod.yml run test

production:
    stage: production
    only:
        - master
    before_script:
        - apk add --no-cache openssh-client bash rsync
        - pip install fabric==2.4.0
        - eval $(ssh-agent -s)
        - bash -c 'ssh-add <(echo "$DEPLOY_KEY")'
        - mkdir -p ~/.ssh
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    script:
        - fab -H $DEPLOY_ADDR deploy