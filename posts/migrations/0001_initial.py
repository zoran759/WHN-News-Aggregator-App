# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-01 19:55
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BufferItem',
            fields=[
                ('item_id', models.CharField(blank=True, max_length=60, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='BufferProfile',
            fields=[
                ('profile_id', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('profile_description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_time', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CommentVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField(choices=[(1, '+1'), (-1, '-1')])),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='InstagramComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('submitter_username', models.CharField(max_length=127)),
                ('submitter_full_name', models.CharField(max_length=127)),
                ('submitter_profile_picture', models.URLField()),
                ('submitter_id', models.CharField(max_length=127)),
                ('instagram_id', models.CharField(max_length=127, unique=True)),
                ('created_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='InstagramHashtagsToFetch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=127)),
            ],
        ),
        migrations.CreateModel(
            name='InstagramImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=127)),
                ('tags', models.TextField()),
                ('num_tags', models.PositiveIntegerField()),
                ('image_url_lowres', models.URLField()),
                ('image_url_standardres', models.URLField()),
                ('image_url_thumbnail', models.URLField()),
                ('caption', models.TextField()),
                ('submitter_username', models.CharField(max_length=127)),
                ('submitter_full_name', models.CharField(max_length=127)),
                ('submitter_picture_url', models.URLField()),
                ('submitter_id', models.CharField(max_length=127)),
                ('instagram_id', models.CharField(max_length=127, unique=True)),
                ('num_likes', models.PositiveIntegerField()),
                ('created_time', models.DateTimeField()),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=85)),
                ('submit_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('url', models.URLField(blank=True, max_length=300)),
                ('text', models.TextField(blank=True)),
                ('article_text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PostVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField(choices=[(1, '+1'), (-1, '-1')])),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Post')),
            ],
        ),
        migrations.CreateModel(
            name='RelatedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, max_length=300)),
                ('title', models.CharField(max_length=85)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Post')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('description', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('is_email_public', models.BooleanField()),
                ('is_shadowbanned', models.BooleanField()),
                ('is_fake', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='postvote',
            name='voter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postflag',
            name='flagger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postflag',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Post'),
        ),
        migrations.AddField(
            model_name='post',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='instagramcomment',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.InstagramImage'),
        ),
        migrations.AddField(
            model_name='commentvote',
            name='voter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='posts.Comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='posts.Post'),
        ),
        migrations.AddField(
            model_name='bufferitem',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Post'),
        ),
        migrations.AlterUniqueTogether(
            name='postvote',
            unique_together=set([('voter', 'post')]),
        ),
        migrations.AlterUniqueTogether(
            name='commentvote',
            unique_together=set([('voter', 'comment')]),
        ),
    ]
